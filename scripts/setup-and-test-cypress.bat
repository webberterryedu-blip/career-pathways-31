@echo off
setlocal enabledelayedexpansion

REM Comprehensive Cypress Setup and Test Script
REM Sistema Ministerial - ES Module Compatible
REM Windows 11 Optimized

echo.
echo üîß Setup e Teste Cypress - Sistema Ministerial
echo    ES Module Compatible - Windows 11
echo.

REM Verificar diret√≥rio do projeto
echo üìÅ Verificando diret√≥rio do projeto...
if not exist "package.json" (
    echo ‚ùå Erro: package.json n√£o encontrado
    echo    Certifique-se de estar no diret√≥rio raiz do projeto
    echo    Diret√≥rio atual: %CD%
    echo    Diret√≥rio esperado: C:\Users\frank.MONITORE-MAFRA\Documents\GitHub\sua-parte
    pause
    exit /b 1
)
echo ‚úÖ Diret√≥rio correto encontrado

REM Verificar Node.js
echo.
echo üì¶ Verificando Node.js...
node --version >nul 2>&1
if !ERRORLEVEL! NEQ 0 (
    echo ‚ùå Node.js n√£o encontrado
    echo    Instale Node.js de: https://nodejs.org/
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
echo ‚úÖ Node.js encontrado: !NODE_VERSION!

REM Verificar npm
echo.
echo üì¶ Verificando npm...
npm --version >nul 2>&1
if !ERRORLEVEL! NEQ 0 (
    echo ‚ùå npm n√£o encontrado
    echo    Reinstale Node.js
    pause
    exit /b 1
)

for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
echo ‚úÖ npm encontrado: v!NPM_VERSION!

REM Instalar depend√™ncias se necess√°rio
echo.
echo üì¶ Verificando depend√™ncias...
if not exist "node_modules" (
    echo ‚ö†Ô∏è node_modules n√£o encontrado. Instalando depend√™ncias...
    call npm install
    if !ERRORLEVEL! NEQ 0 (
        echo ‚ùå Erro ao instalar depend√™ncias
        pause
        exit /b 1
    )
    echo ‚úÖ Depend√™ncias instaladas
) else (
    echo ‚úÖ node_modules encontrado
)

REM Verificar se Cypress est√° instalado
echo.
echo üß™ Verificando Cypress...
if exist "node_modules\cypress" (
    echo ‚úÖ Cypress encontrado em node_modules
) else (
    echo ‚ö†Ô∏è Cypress n√£o encontrado. Instalando...
    call npm install cypress --save-dev
    if !ERRORLEVEL! NEQ 0 (
        echo ‚ùå Erro ao instalar Cypress
        pause
        exit /b 1
    )
)

REM Verificar vers√£o do Cypress
echo.
echo üîç Verificando vers√£o do Cypress...
call node_modules\.bin\cypress --version 2>nul
if !ERRORLEVEL! NEQ 0 (
    echo ‚ö†Ô∏è Tentando verificar com npx...
    call npx cypress --version
    if !ERRORLEVEL! NEQ 0 (
        echo ‚ùå Erro ao verificar Cypress
        echo    Tentando reinstalar...
        call npm uninstall cypress
        call npm install cypress --save-dev
    )
)

REM Instalar bin√°rios do Cypress se necess√°rio
echo.
echo üîß Verificando bin√°rios do Cypress...
call node_modules\.bin\cypress install
if !ERRORLEVEL! NEQ 0 (
    echo ‚ö†Ô∏è Tentando com npx...
    call npx cypress install
)

REM Verificar arquivos de teste
echo.
echo üìã Verificando arquivos de teste...
if exist "cypress\e2e\sarah-student-registration.cy.ts" (
    echo ‚úÖ Teste da Sarah encontrado
) else (
    echo ‚ùå Arquivo de teste da Sarah n√£o encontrado
    echo    Arquivo esperado: cypress\e2e\sarah-student-registration.cy.ts
)

if exist "cypress.config.ts" (
    echo ‚úÖ Configura√ß√£o do Cypress encontrada
) else (
    echo ‚ùå cypress.config.ts n√£o encontrado
)

REM Mostrar op√ß√µes de teste
echo.
echo üéØ Op√ß√µes de Teste Dispon√≠veis:
echo.
echo 1. Executar teste da Sarah (headless)
echo 2. Abrir Cypress em modo interativo
echo 3. Executar todos os testes E2E
echo 4. Verificar configura√ß√£o apenas
echo 5. Sair
echo.

set /p choice="Escolha uma op√ß√£o (1-5): "

if "%choice%"=="1" goto test_sarah
if "%choice%"=="2" goto open_cypress
if "%choice%"=="3" goto test_all
if "%choice%"=="4" goto verify_only
if "%choice%"=="5" goto end
goto invalid_choice

:test_sarah
echo.
echo üß™ Executando teste da Sarah...
echo.
echo üë§ Dados de teste:
echo    Nome: Sarah Rackel Ferreira Lima
echo    Email: franklima.flm@gmail.com
echo    Data de Nascimento: 25/09/2009 (14 anos)
echo    Congrega√ß√£o: Market Harborough
echo.

REM Tentar diferentes m√©todos para executar o teste
call node_modules\.bin\cypress run --spec "cypress/e2e/sarah-student-registration.cy.ts" 2>nul
if !ERRORLEVEL! NEQ 0 (
    echo ‚ö†Ô∏è Tentando m√©todo alternativo...
    call npx cypress run --spec "cypress/e2e/sarah-student-registration.cy.ts"
    if !ERRORLEVEL! NEQ 0 (
        echo ‚ùå Erro ao executar teste
        echo    Tente o modo interativo (op√ß√£o 2)
        pause
        goto end
    )
)

echo.
echo üéâ Teste da Sarah conclu√≠do!
echo.
echo üìä Resultados salvos em:
echo    - V√≠deos: cypress\videos\
echo    - Screenshots: cypress\screenshots\
goto end

:open_cypress
echo.
echo üñ•Ô∏è Abrindo Cypress em modo interativo...
echo.
call node_modules\.bin\cypress open 2>nul
if !ERRORLEVEL! NEQ 0 (
    echo ‚ö†Ô∏è Tentando m√©todo alternativo...
    call npx cypress open
)
goto end

:test_all
echo.
echo üß™ Executando todos os testes E2E...
echo.
call node_modules\.bin\cypress run 2>nul
if !ERRORLEVEL! NEQ 0 (
    echo ‚ö†Ô∏è Tentando m√©todo alternativo...
    call npx cypress run
)
goto end

:verify_only
echo.
echo ‚úÖ Verifica√ß√£o de configura√ß√£o conclu√≠da
echo    Todos os componentes necess√°rios est√£o instalados
goto end

:invalid_choice
echo.
echo ‚ùå Op√ß√£o inv√°lida. Tente novamente.
pause
goto end

:end
echo.
echo üí° Comandos √∫teis para o futuro:
echo.
echo    npm run test:sarah              # Teste da Sarah
echo    npm run cypress:open            # Modo interativo
echo    scripts\setup-and-test-cypress.bat  # Este script
echo.
pause
