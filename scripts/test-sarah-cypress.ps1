# PowerShell script para executar testes Cypress espec√≠ficos da Sarah
# Sistema Ministerial - Teste de Registro de Estudante com Data de Nascimento
# ES Module Compatible - Windows 11

param(
    [switch]$Open,
    [switch]$Headless,
    [string]$Spec,
    [switch]$Help,
    [switch]$Setup
)

# Configura√ß√µes da Sarah
$sarahConfig = @{
    FullName = "Sarah Rackel Ferreira Lima"
    Email = "franklima.flm@gmail.com"
    DateOfBirth = "25/09/2009"
    Congregation = "Market Harborough"
    Role = "Publicador N√£o Batizado"
    BaseUrl = "https://sua-parte.lovable.app"
}

# Calcular idade da Sarah
function Get-Age {
    param([datetime]$BirthDate)
    $today = Get-Date
    $age = $today.Year - $BirthDate.Year
    if ($today.DayOfYear -lt $BirthDate.DayOfYear) {
        $age--
    }
    return $age
}

$sarahBirthDate = [datetime]::ParseExact("25/09/2009", "dd/MM/yyyy", $null)
$sarahAge = Get-Age -BirthDate $sarahBirthDate

Write-Host "üß™ Executando Testes Cypress - Registro da Sarah com Data de Nascimento" -ForegroundColor Cyan
Write-Host ""

Write-Host "üìã Configura√ß√£o do Teste da Sarah:" -ForegroundColor Yellow
Write-Host "   Nome: $($sarahConfig.FullName)" -ForegroundColor White
Write-Host "   Email: $($sarahConfig.Email)" -ForegroundColor White
Write-Host "   Data de Nascimento: $($sarahConfig.DateOfBirth)" -ForegroundColor White
Write-Host "   Idade: $sarahAge anos" -ForegroundColor White
Write-Host "   Congrega√ß√£o: $($sarahConfig.Congregation)" -ForegroundColor White
Write-Host "   Cargo: $($sarahConfig.Role)" -ForegroundColor White
Write-Host "   Base URL: $($sarahConfig.BaseUrl)" -ForegroundColor White
Write-Host ""

# Fun√ß√£o para mostrar ajuda
function Show-Help {
    Write-Host "üß™ Script de Testes Cypress - Sarah Student Registration" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Uso: .\scripts\test-sarah-cypress.ps1 [op√ß√µes]" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "Op√ß√µes:" -ForegroundColor Yellow
    Write-Host "  -Open               Abrir Cypress em modo interativo" -ForegroundColor White
    Write-Host "  -Headless           Executar em modo headless" -ForegroundColor White
    Write-Host "  -Spec <arquivo>     Executar teste espec√≠fico" -ForegroundColor White
    Write-Host "  -Help               Mostrar esta ajuda" -ForegroundColor White
    Write-Host ""
    Write-Host "Exemplos:" -ForegroundColor Yellow
    Write-Host "  .\scripts\test-sarah-cypress.ps1" -ForegroundColor White
    Write-Host "  .\scripts\test-sarah-cypress.ps1 -Open" -ForegroundColor White
    Write-Host "  .\scripts\test-sarah-cypress.ps1 -Spec 'cypress/e2e/sarah-student-registration.cy.ts'" -ForegroundColor White
    Write-Host ""
    Write-Host "üéÇ Funcionalidades Testadas:" -ForegroundColor Yellow
    Write-Host "  ‚Ä¢ Registro de estudante com data de nascimento" -ForegroundColor White
    Write-Host "  ‚Ä¢ Valida√ß√£o de idade para Escola do Minist√©rio (6-100 anos)" -ForegroundColor White
    Write-Host "  ‚Ä¢ C√°lculo autom√°tico da idade em tempo real" -ForegroundColor White
    Write-Host "  ‚Ä¢ Armazenamento da data de nascimento no banco de dados" -ForegroundColor White
    Write-Host "  ‚Ä¢ Exibi√ß√£o da data de nascimento e idade no portal do estudante" -ForegroundColor White
    Write-Host "  ‚Ä¢ Login e acesso ao portal personalizado" -ForegroundColor White
    Write-Host "  ‚Ä¢ Valida√ß√£o de casos extremos (muito jovem, muito velho, data futura)" -ForegroundColor White
    Write-Host ""
    Write-Host "üë§ Dados de Teste da Sarah:" -ForegroundColor Yellow
    Write-Host "  ‚Ä¢ Nome: $($sarahConfig.FullName)" -ForegroundColor White
    Write-Host "  ‚Ä¢ Email: $($sarahConfig.Email)" -ForegroundColor White
    Write-Host "  ‚Ä¢ Data de Nascimento: $($sarahConfig.DateOfBirth) ($sarahAge anos)" -ForegroundColor White
    Write-Host "  ‚Ä¢ Congrega√ß√£o: $($sarahConfig.Congregation)" -ForegroundColor White
    Write-Host "  ‚Ä¢ Cargo: $($sarahConfig.Role)" -ForegroundColor White
}

# Mostrar ajuda se solicitado
if ($Help) {
    Show-Help
    exit 0
}

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Erro: package.json n√£o encontrado" -ForegroundColor Red
    Write-Host "   Certifique-se de estar no diret√≥rio raiz do projeto" -ForegroundColor Yellow
    Write-Host "   Diret√≥rio atual: $(Get-Location)" -ForegroundColor Gray
    exit 1
}

# Verificar se node_modules existe
if (-not (Test-Path "node_modules")) {
    Write-Host "‚ö†Ô∏è node_modules n√£o encontrado. Instalando depend√™ncias..." -ForegroundColor Yellow
    npm install
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erro ao instalar depend√™ncias" -ForegroundColor Red
        exit 1
    }
}

# Verificar se Cypress est√° instalado
Write-Host "üîç Verificando se Cypress est√° instalado..." -ForegroundColor Yellow

# Tentar usar o bin√°rio local primeiro
$cypressBin = "node_modules\.bin\cypress.cmd"
if (Test-Path $cypressBin) {
    Write-Host "‚úÖ Cypress encontrado em node_modules" -ForegroundColor Green
    try {
        $cypressVersion = & $cypressBin --version 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "   $cypressVersion" -ForegroundColor Gray
        }
    } catch {
        Write-Host "‚ö†Ô∏è Erro ao verificar vers√£o do Cypress" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå Cypress n√£o encontrado. Instalando..." -ForegroundColor Red
    npm install cypress --save-dev
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Cypress instalado" -ForegroundColor Green
        # Instalar bin√°rios
        & "node_modules\.bin\cypress.cmd" install
    } else {
        Write-Host "‚ùå Erro ao instalar Cypress" -ForegroundColor Red
        exit 1
    }
}

Write-Host ""

# Executar testes
try {
    if ($Open) {
        Write-Host "üñ•Ô∏è Abrindo Cypress em modo interativo..." -ForegroundColor Yellow
        npx cypress open
    } else {
        Write-Host "ü§ñ Executando testes em modo headless..." -ForegroundColor Yellow
        
        $cypressArgs = @("cypress", "run")
        
        if ($Spec) {
            $cypressArgs += "--spec"
            $cypressArgs += $Spec
            Write-Host "üìÅ Executando teste espec√≠fico: $Spec" -ForegroundColor Gray
        } else {
            # Executar apenas testes da Sarah por padr√£o
            $cypressArgs += "--spec"
            $cypressArgs += "cypress/e2e/sarah-student-registration.cy.ts"
            Write-Host "üìÅ Executando teste principal da Sarah" -ForegroundColor Gray
        }
        
        if ($Headless) {
            $cypressArgs += "--headless"
        }
        
        Write-Host ""
        Write-Host "üöÄ Comando: npx $($cypressArgs -join ' ')" -ForegroundColor Gray
        Write-Host ""
        
        & npx @cypressArgs
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host ""
            Write-Host "üéâ Testes da Sarah conclu√≠dos com sucesso!" -ForegroundColor Green
            Write-Host ""
            Write-Host "üìä Resultados:" -ForegroundColor Yellow
            Write-Host "   - V√≠deos salvos em: cypress/videos/" -ForegroundColor White
            Write-Host "   - Screenshots (se houver falhas): cypress/screenshots/" -ForegroundColor White
            Write-Host ""
            Write-Host "üéÇ Funcionalidades Testadas:" -ForegroundColor Yellow
            Write-Host "   ‚úÖ Registro com data de nascimento" -ForegroundColor Green
            Write-Host "   ‚úÖ Valida√ß√£o de idade (6-100 anos)" -ForegroundColor Green
            Write-Host "   ‚úÖ C√°lculo autom√°tico da idade" -ForegroundColor Green
            Write-Host "   ‚úÖ Armazenamento no banco de dados" -ForegroundColor Green
            Write-Host "   ‚úÖ Exibi√ß√£o no portal do estudante" -ForegroundColor Green
            Write-Host "   ‚úÖ Login e acesso ao portal" -ForegroundColor Green
            Write-Host ""
            Write-Host "üí° Comandos √∫teis:" -ForegroundColor Yellow
            Write-Host "   npm run test:sarah                    # Executar teste da Sarah" -ForegroundColor White
            Write-Host "   npm run cypress:open                  # Modo interativo" -ForegroundColor White
            Write-Host "   .\scripts\test-sarah-cypress.ps1 -Open # Este script em modo interativo" -ForegroundColor White
        } else {
            Write-Host ""
            Write-Host "‚ùå Testes falharam" -ForegroundColor Red
            Write-Host ""
            Write-Host "üîß Troubleshooting:" -ForegroundColor Yellow
            Write-Host "   1. Verificar se a aplica√ß√£o est√° rodando" -ForegroundColor White
            Write-Host "   2. Verificar conectividade de rede" -ForegroundColor White
            Write-Host "   3. Verificar se o email da Sarah n√£o est√° em uso" -ForegroundColor White
            Write-Host "   4. Executar em modo interativo: .\scripts\test-sarah-cypress.ps1 -Open" -ForegroundColor White
            Write-Host "   5. Verificar se a funcionalidade de data de nascimento est√° implementada" -ForegroundColor White
            exit 1
        }
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå Erro ao executar testes: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß Troubleshooting:" -ForegroundColor Yellow
    Write-Host "   1. Verificar se Node.js est√° instalado" -ForegroundColor White
    Write-Host "   2. Verificar se npm est√° funcionando" -ForegroundColor White
    Write-Host "   3. Executar 'npm install' para instalar depend√™ncias" -ForegroundColor White
    Write-Host "   4. Verificar se est√° no diret√≥rio correto do projeto" -ForegroundColor White
    exit 1
}
