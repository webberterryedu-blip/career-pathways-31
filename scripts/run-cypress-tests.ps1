# üß™ Script de Execu√ß√£o dos Testes Cypress - Sistema Ministerial
# ================================================================

Write-Host "üß™ EXECUTANDO TESTES CYPRESS - SISTEMA MINISTERIAL" -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host ""

# Configurar vari√°veis de ambiente
$env:CYPRESS_INSTRUCTOR_EMAIL = "frankwebber33@hotmail.com"
$env:CYPRESS_INSTRUCTOR_PASSWORD = "senha123"
$env:CYPRESS_STUDENT_EMAIL = "franklinmarceloferreiradelima@gmail.com"
$env:CYPRESS_STUDENT_PASSWORD = "senha123"
$env:FRANKLIN_EMAIL = "franklinmarceloferreiradelima@gmail.com"
$env:FRANKLIN_PASSWORD = "senha123"

# Verificar se o Node.js est√° instalado
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js encontrado: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n√£o encontrado. Instale o Node.js primeiro." -ForegroundColor Red
    Read-Host "Pressione Enter para sair"
    exit 1
}

# Verificar se as depend√™ncias est√£o instaladas
if (-not (Test-Path "node_modules")) {
    Write-Host "üì¶ Instalando depend√™ncias..." -ForegroundColor Yellow
    try {
        npm install
        if ($LASTEXITCODE -ne 0) {
            throw "Erro ao instalar depend√™ncias"
        }
    } catch {
        Write-Host "‚ùå Erro ao instalar depend√™ncias: $_" -ForegroundColor Red
        Read-Host "Pressione Enter para sair"
        exit 1
    }
}

# Verificar se o Cypress est√° instalado
try {
    $cypressVersion = npx cypress --version
    Write-Host "‚úÖ Cypress encontrado: $cypressVersion" -ForegroundColor Green
} catch {
    Write-Host "üì¶ Instalando Cypress..." -ForegroundColor Yellow
    try {
        npm install cypress --save-dev
        if ($LASTEXITCODE -ne 0) {
            throw "Erro ao instalar Cypress"
        }
    } catch {
        Write-Host "‚ùå Erro ao instalar Cypress: $_" -ForegroundColor Red
        Read-Host "Pressione Enter para sair"
        exit 1
    }
}

Write-Host ""
Write-Host "üöÄ Iniciando aplica√ß√£o em modo de desenvolvimento..." -ForegroundColor Yellow
Write-Host ""

# Iniciar aplica√ß√£o em background
$devServer = Start-Process -FilePath "cmd" -ArgumentList "/c", "npm run dev" -WindowStyle Minimized -PassThru

# Aguardar aplica√ß√£o inicializar
Write-Host "‚è≥ Aguardando aplica√ß√£o inicializar..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Verificar se a aplica√ß√£o est√° rodando
Write-Host "üîç Verificando se a aplica√ß√£o est√° rodando..." -ForegroundColor Yellow
$maxAttempts = 10
$attempt = 0

do {
    $attempt++
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:5173" -TimeoutSec 5 -ErrorAction Stop
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Aplica√ß√£o rodando em http://localhost:5173" -ForegroundColor Green
            break
        }
    } catch {
        if ($attempt -lt $maxAttempts) {
            Write-Host "‚è≥ Tentativa $attempt/$maxAttempts - Aguardando aplica√ß√£o..." -ForegroundColor Yellow
            Start-Sleep -Seconds 3
        } else {
            Write-Host "‚ùå Aplica√ß√£o n√£o respondeu ap√≥s $maxAttempts tentativas" -ForegroundColor Red
            Stop-Process -Id $devServer.Id -Force -ErrorAction SilentlyContinue
            Read-Host "Pressione Enter para sair"
            exit 1
        }
    }
} while ($attempt -lt $maxAttempts)

Write-Host ""
Write-Host "üß™ Executando testes Cypress..." -ForegroundColor Yellow
Write-Host ""

# Executar testes espec√≠ficos
Write-Host "üìã Executando teste completo do sistema..." -ForegroundColor Cyan
try {
    npx cypress run --spec "cypress/e2e/sistema-ministerial-completo.cy.ts" --browser chrome --headed
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "‚úÖ Todos os testes passaram com sucesso!" -ForegroundColor Green
        Write-Host ""
    } else {
        throw "Alguns testes falharam"
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå Alguns testes falharam. Verificando detalhes..." -ForegroundColor Red
    Write-Host ""
    
    # Executar testes em modo interativo para debug
    Write-Host "üîç Abrindo Cypress em modo interativo para debug..." -ForegroundColor Yellow
    try {
        npx cypress open
    } catch {
        Write-Host "‚ùå Erro ao abrir Cypress interativo: $_" -ForegroundColor Red
    }
}

# Parar aplica√ß√£o de desenvolvimento
Write-Host "üõë Parando servidor de desenvolvimento..." -ForegroundColor Yellow
try {
    Stop-Process -Id $devServer.Id -Force -ErrorAction SilentlyContinue
    Write-Host "‚úÖ Servidor parado com sucesso" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è N√£o foi poss√≠vel parar o servidor automaticamente" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ Testes conclu√≠dos!" -ForegroundColor Green
Write-Host ""
Read-Host "Pressione Enter para sair"
